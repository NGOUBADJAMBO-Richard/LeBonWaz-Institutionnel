rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Fonctions helper
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAssignedTo(leadData) {
      return isAuthenticated() && leadData.assignedToUserId == request.auth.uid;
    }
    
    // Collection Users
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isOwner(userId);
      allow update: if isAdmin() || isOwner(userId);
      allow delete: if isAdmin();
    }
    
    // Collection Leads
    match /leads/{leadId} {
      allow read: if isAdmin() || 
                     (isAuthenticated() && resource.data.assignedToUserId == request.auth.uid);
      allow create: if isAuthenticated();
      allow update: if isAdmin() || 
                       (isAuthenticated() && resource.data.assignedToUserId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Collection Interactions
    match /interactions/{interactionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if false; // Interactions are immutable
    }
    
    // Collection LeadStatusHistory
    match /leadStatusHistory/{historyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if false; // History is immutable
    }
  }
}
